@startuml RT
Title MiniRT
skinparam monochrome false
skinparam ranksep 20
skinparam dpi 150
skinparam arrowThickness 0.7
skinparam packageTitleAlignment left
skinparam usecaseBorderThickness 0.4
skinparam defaultFontSize 12
skinparam rectangleBorderThickness 1

<style>
rectangle {
  BackGroundColor #91bbe3
  LineThickness 1
  LineColor black
}
</style>

rectangle "Main" {
  (init_mlx)
  (get_scene_from_file)
}



rectangle "Scene_builder" {
	(file_scene_check)
  (parse_input)
  (create_scene)
	artifact "Scene" {

	}
}

rectangle "img_builder" {
	(create_img)
	file img.xpm
}

rectangle "print_img_loop" {
	(get_img_from_scene)
	(print_img)
	(loop)
	(modify_scene)

}


file scene.rt
(cleanup)
circle exit
rectangle "<b>./minirt scene.rt</b>" as main_ts


Main ==> get_scene_from_file
(init_mlx) <== (get_scene_from_file)
(get_scene_from_file) <--> Scene_builder
(init_mlx) ==> get_img_from_scene
main_ts ~~ scene.rt : arg
file_scene_check ~~ scene.rt : arg
main_ts ==> Main
(loop) ==> (cleanup) : exit
(loop) <- (print_img)
(parse_input) -> (create_scene)
(create_scene) -> Scene
get_img_from_scene <--> img_builder
(cleanup) ==@ (exit)
Scene -> Scene_builder
(create_img) --> img.xpm
img.xpm --> img_builder
Scene ~~ create_img : arg
get_img_from_scene -> print_img
(loop) -> modify_scene : change
file_scene_check -> parse_input
modify_scene -> get_img_from_scene

newpage
title Test
circle circle
folder folder [
This is a <b>folder
----
You can use separator
====
of different kind
....
and style
]
@enduml